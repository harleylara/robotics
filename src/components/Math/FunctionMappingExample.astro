---
// IMPORTANT: import the JSXGraph wrapper component
import JSXGraph from "../Figures/JSXGraph.astro";

const {description="Please insert the description of this figure"} = Astro.props;
---

<JSXGraph description={description}>
    <div id="function-mapping-example" class="jsxbox" style="width: 100%; height: 480px;">
    </div>
</JSXGraph>

<script>
// IMPORTANT: import JSXGraph
import JXG from '../../tools/jsxgraph.init.js'

let board = JXG.JSXGraph.initBoard('function-mapping-example', {
  boundingbox:[-10,2,10,-2],
  axis: false,
  showNavigation:true, 
  showCopyright:false,
  // keepaspectratio:true
});

  // Domain axis at y = 0
  const domain = board.create('axis', [[0, 1.5], [1, 1.5]], {
    firstArrow: true,
    lastArrow: true,
    ticks: {
      drawZero: true,
      ticksDistance: 1,
      majorHeight: 20,
      tickEndings: [1,1],
      minorTicks: 0
    }
  });


  // Codomain axis at y = -1.5
  const codomain = board.create('axis', [[0, -1.5], [1, -1.5]], {
    firstArrow: true,

    lastArrow: true,
    ticks: {
      drawZero: true,
      ticksDistance: 5,

      majorHeight: 20,
      tickEndings: [1,1],
      minorTicks: 4
    }
});

board.create('text', [-5.5, (domain.point1.Y() + 1), '\\textrm{Domain}'], { fontSize: 14 });
board.create('text', [-5.5, (codomain.point1.Y() + 1), '\\textrm{Codomain}'], { fontSize: 14 });

  // Map integers from -5 to 5
  for (let x = -5; x <= 5; x++) {
    const domainPt = board.create('point', [x, domain.point1.Y()], {
      name: `${x}`,
      size: 3,
      color: 'blue',
      fixed: true,
      showInfobox: false
    });

    const codomainPt = board.create('point', [x * x, codomain.point1.Y()], {
      name: `${x * x}`,
      size: 3,
      color: 'red',
      fixed: true,
      showInfobox: false
    });

    board.create('arrow', [
      [x, domain.point1.Y()],
      [x * x, codomain.point1.Y()]
    ], {
      strokeWidth: 1,
      dash: 2,
      fixed: true,
      strokeColor: '#ccc'
    });
  }
</script>
