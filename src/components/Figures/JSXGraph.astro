---
const {description="Description"} = Astro.props;
---
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.css" integrity="sha384-vKruj+a13U8yHIkAyGgK1J3ArTLzrFGBbBc0tDp4ad/EyewESeXE/Iv67Aj8gKZ0" crossorigin="anonymous">
<script defer src="https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.js" integrity="sha384-PwRUT/YqbnEjkZO0zZxNqcxACrXe+j766U2amXcgMg5457rve2Y7I6ZJSm2A0mS4" crossorigin="anonymous"></script>
<div class="flex flex-col items-center border-[0.3px] border-dark-100 w-full h-96">
    <div id="box1" class="jsxbox" style="width:100%; height:340px"></div>
    <em class="py-4">Figure X.X: {description}</em>
</div>
<script>
import JXG from 'https://cdn.jsdelivr.net/npm/jsxgraph/distrib/jsxgraphcore.mjs';

var brd, k;
// colors definitions
let dark100 = "#333333";
let dark200 = "#4f4f4f";
let dark300 = "#828282";
let dark400 = "#bdbdbd";
let dark500 = "#e0e0e0";
let dark600 = "#f2f2f2";
let white = "#ffffff";


let highlightColor = dark600;
let baseColor = white;

JXG.Options.text.useKatex = true;

JXG.Options.axis.strokeColor = baseColor;
JXG.Options.axis.ticks.strokeColor = baseColor;

JXG.Options.label.strokeColor = baseColor;
JXG.Options.label.highlightStrokeColor = highlightColor;

JXG.Options.text.strokeColor = baseColor;
JXG.Options.text.highlightStrokeColor = highlightColor;

JXG.Options.slider.label.strokeColor = baseColor;
JXG.Options.slider.highline.strokeColor = baseColor;
JXG.Options.slider.baseline.strokeColor = highlightColor;
JXG.Options.slider.fillColor = dark300;
JXG.Options.slider.ticks.strokeColor = baseColor;
JXG.Options.slider.strokeColor = baseColor;
JXG.Options.slider.highlightStrokeColor = highlightColor;

JXG.Options.navbar.strokeColor = baseColor;
JXG.Options.navbar.fillColor = dark100;

// JXG.Options.htmlslider.strokeColor = "#ffffff";

// JXG.Options.grid.strokeColor = "#ffffff";
let board = JXG.JSXGraph.initBoard('box1', {
    boundingbox:[-5,10,5,-5],
    axis:true, 
    showNavigation:true, 
    showCopyright:false,
    defaultAxes: {
        x : {
            name: 'X',
            withLabel: true,
            label: {
                position: 'rt',
                offset: [-10, -15]
            }
        },
        y : {
            withLabel:true,
            name: 'Y',
            label: {
                position: 'rt',
                offset: [-20, -10]
            }
        }
}});

let a = board.create('slider',
    [[-4,-2],[4,-2],[-4,1.5,4]],
    {name:'a'}
);
let p1 = board.create('point',
    [2,5]
);
let l1 = board.create('line',
    [[0,0],p1], {
    straightFirst:false,
    straightLast:false, 
    lastArrow:true,
});
l1.setAttribute({fixed:true});

let p2 = board.create('point',
    [
        function() {return a.Value()*p1.X();},
        function() {return a.Value()*p1.Y();}
    ]
);
let l2 = board.create('line',[p1,p2],{straightFirst:false, straightLast:false, lastArrow:true});
board.create('text',[-4,6,
  function() { 
    return `\\vv = ${a.Value().toFixed(2)} \\begin{bmatrix} ${p1.X().toFixed(2)} \\newline ${p1.Y().toFixed(2)} \\end{bmatrix} = 
    \\begin{bmatrix} ${(a.Value()*p1.X()).toFixed(2)} \\newline ${(a.Value()*p1.Y()).toFixed(2)} \\end{bmatrix}`;
  }]);

let segmentX = board.create(
    'line',
    [[0, function(){return p1.Y()}], p1],
    {
        straightFirst:false,
        straightLast:false,
        dash:2,
        fixed: true,
        strokeColor: "red"
    }
);
let segmentY = board.create(
    'line',
    [[function(){return p1.X()},0],p1],
    {
        straightFirst:false,
        straightLast:false,
        dash:2,
        fixed: true,
        strokeColor: "green"
    }
);
</script>
