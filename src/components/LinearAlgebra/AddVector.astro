---
// IMPORTANT: import the JSXGraph wrapper component
import JSXGraph from "../Figures/JSXGraph.astro";

const {description="Please insert the description of this figure"} = Astro.props;
---

<JSXGraph description={description}>
    <div id="vector-mult" class="jsxbox" style="width: 100%; height: 480px;">
    </div>
</JSXGraph>

<script>
import JXG from '../../tools/jsxgraph.init.js'

function sumVector(vector1, vector2){
    return vector1 + vector2;
}

let board = JXG.JSXGraph.initBoard('vector-mult', {
    boundingbox:[-5,10,5,-5],
    axis:true, 
    showNavigation:true, 
    showCopyright:false,
    defaultAxes: {
        x : {
            name: 'X',
            withLabel: true,
            label: {
                position: 'rt',
                offset: [-10, -15]
            }
        },
        y : {
            withLabel:true,
            name: 'Y',
            label: {
                position: 'rt',
                offset: [-20, -10]
            }
        }
}});

let vectorC = board.create('point',[1,4]);

let lineC = board.create('line',
    [[0,0],vectorC], {
        straightFirst: false,
        straightLast: false,
        lastArrow: true,
        strokeColor: "blue",
        fixed: true
    });

let txtC = board.create('text',
    [-0.2, 0, '\\vc'], {
        anchor: lineC
    });

let vectorD = board.create('point',[1.5,1]);

let lineD = board.create('line',
    [[0,0],vectorD], {
        straightFirst: false, 
        straightLast: false, 
        lastArrow: true,
        strokeColor: "orange",
        fixed: true
    });

let txtD = board.create('text',[0, 0.5, '\\vd'], {anchor: lineD});



let resultVector = board.create('point',
    [
        function(){return vectorC.X() + vectorD.X()},
        function(){return vectorC.Y() + vectorD.Y()}
    ]
);

let lineResult = board.create('line',
    [[0,0],resultVector],{
        straightFirst: false,
        straightLast: false,
        lastArrow: true,
        fixed: true,
        strokeColor: "red"
    });

// reference of the second vector
let lineRef = board.create('line',
    [vectorC,resultVector], {
        straightFirst:false,
        straightLast:false,
        dash:2,
        fixed: true,
        strokeColor: "gray",
        visible: false
    });

let description = board.create('text',
    [-4,6,
    function() { 
        return `\\vc + \\vd = \\begin{bmatrix} ${vectorC.X().toFixed(2)} \\newline ${vectorC.Y().toFixed(2)} \\end{bmatrix} + ` +
        `\\begin{bmatrix} ${vectorD.X().toFixed(2)} \\newline ${vectorD.Y().toFixed(2)} \\end{bmatrix} = ` +
        `\\begin{bmatrix} ${resultVector.X().toFixed(2)} \\newline ${resultVector.Y().toFixed(2)} \\end{bmatrix}`;
    }]
);

let btnHide = board.create('button', [-4, -3, 'Show reference vector', function() {
    let txt;
    btnHide.value = !btnHide.value;
    if (btnHide.value) {
  	    txt = 'Hide reference vector';
        lineRef.setAttribute({visible:true});
    } else {
  	    txt = 'Show reference vector';
        lineRef.setAttribute({visible:false});
    }
	btnHide.rendNodeButton.
        innerHTML = txt;
 }],{
        useKatex: false
});

</script>
