---
// IMPORTANT: import the JSXGraph wrapper component
import JSXGraph from "../Figures/JSXGraph.astro";

const {description="Please insert the description of this figure"} = Astro.props;
---

<JSXGraph description={description}>
    <div id="gmt-affine" class="jsxbox" style="width: 100%; height: 480px;">
    </div>
</JSXGraph>

<script>
// IMPORTANT: import JSXGraph
import JXG from '../../tools/jsxgraph.init.js'

let board = JXG.JSXGraph.initBoard('gmt-affine', {
    boundingbox:[-5,6,10,-5],
    axis:true, 
    showNavigation:true, 
    showCopyright:false,
    keepaspectratio:true,
    defaultAxes: {
        x : {
            name: 'X',
            withLabel: true,
            label: {
                position: 'rt',
                offset: [-10, -15]
            }
        },
        y : {
            withLabel:true,
            name: 'Y',
            label: {
                position: 'rt',
                offset: [-20, -10]
            }
        }
}});

let length = 2;

let t1 = board.create('slider',[[6,-1],[9,-1],[-4,0,8]],{name:'a_{13}'});
let t2 = board.create('slider',[[6,-2],[9,-2],[-4,0,8]],{name:'a_{23}'});

let a = board.create('slider',[[-5,-1],[-2,-1],[-3,1,2]],{name:'a_{11}'});
let b = board.create('slider',[[0.5,-1],[3.5,-1],[-3,0,2]],{name:'a_{12}'});

let c = board.create('slider',[[-5,-2],[-2,-2],[-3,0,2]],{name:'a_{21}'});
let d = board.create('slider',[[0.5,-2],[3.5,-2],[-3,1,2]],{name:'a_{22}'});

let sq = [],
    right = board.create('transform', [
    function() {return length;}, 0], {type: 'translate'}),
    up = board.create('transform', [0, 
    function() {return length;}], {type: 'translate'}),
    pol, p0;
    
let afTr = board.create('transform', [ 1, 0, 0,
function(){return t1.Value();}, function() {return a.Value();}, function() {return b.Value();},
function(){return t2.Value();}, function() {return c.Value();}, function() {return d.Value();}], {type: 'generic'});

sq[0] = board.create('point', [0,0], {visible: false}),
sq[1] = board.create('point', [sq[0], right], {visible: false}),
sq[2] = board.create('point', [sq[0], [right, up]], {visible: false}),
sq[3] = board.create('point', [sq[0], up], {visible: false}),

pol = board.create('polygon', sq, {visible: false});
pol2 = board.create('polygon', [pol, afTr]);

</script>
